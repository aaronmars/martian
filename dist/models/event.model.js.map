{"version":3,"names":[],"mappings":"","sources":["models/event.model.js"],"sourcesContent":["/**\n * Martian - Core JavaScript API for MindTouch\n *\n * Copyright (c) 2015 MindTouch Inc.\n * www.mindtouch.com  oss@mindtouch.com\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {modelHelper} from './modelHelper';\nexport let eventModel = {\n    parse(data) {\n        let obj = modelHelper.fromJson(data);\n        let parsed = {\n            id: obj['@id'],\n            datetime: modelHelper.getDate(obj['@datetime']),\n            type: obj['@type'],\n            journaled: modelHelper.getBool(obj['@journaled']),\n            version: modelHelper.getInt(obj['@version']),\n            requestId: obj.request['@id']\n        };\n        if('@language' in obj) {\n            parsed.language = obj['@language'];\n        }\n        if('page' in obj) {\n            parsed.page = {\n                id: obj.page['@id'],\n                path: obj.page.path\n            };\n            if('@revision' in obj.page) {\n                parsed.page.revision = modelHelper.getInt(obj.page['@revision']);\n            }\n        }\n        if('user' in obj) {\n            parsed.user = { id: obj.user['@id'] };\n            if('name' in obj.user) {\n                parsed.user.name = obj.user.name;\n            }\n        }\n        if('data' in obj) {\n            if(parsed.type === 'user:search') {\n                parsed.data = {\n                    constraint: obj.data.constraint,\n                    path: obj.data.path,\n                    query: obj.data.query,\n                    limit: modelHelper.getInt(obj.data.limit),\n                    qid: modelHelper.getInt(obj.data.qid),\n                    totalrecommended: modelHelper.getInt(obj.data.totalrecommended),\n                    totalresults: modelHelper.getInt(obj.data.totalresults)\n                };\n            } else {\n\n                // The only other type possible here is 'page:view'\n                parsed.data = {\n                    host: obj.data['_uri.host'],\n                    query: obj.data['_uri.query'],\n                    scheme: obj.data['_uri.scheme']\n                };\n            }\n        }\n        return parsed;\n    }\n};\n"],"file":"models/event.model.js","sourceRoot":"/source/"}